diff --git a/src/GUI/AddOnsController.cxx b/src/GUI/AddOnsController.cxx
index 39e7e44bd..40a4ce421 100644
--- a/src/GUI/AddOnsController.cxx
+++ b/src/GUI/AddOnsController.cxx
@@ -215,7 +215,7 @@ QString AddOnsController::addSceneryPath() const
     SGPath p(path.toStdString());
     bool isValid = false;
 
-    for (const auto& dir: {"Objects", "Terrain", "Buildings", "Roads", "Pylons", "NavData", "Airports"}) {
+    for (const auto& dir: {"Objects", "Terrain", "Buildings", "Roads", "Pylons", "NavData", "Airports", "Orthophotos"}) {
         if ((p / dir).exists()) {
             isValid = true;
             break;
@@ -228,7 +228,7 @@ QString AddOnsController::addSceneryPath() const
         mb.setStandardButtons(QMessageBox::Yes | QMessageBox::No);
         mb.setDefaultButton(QMessageBox::No);
         mb.setInformativeText(tr("Added scenery should contain at least one of the following "
-                                 "folders: Objects, Terrain, Buildings, Roads, Pylons, NavData, Airports."));
+                                 "folders: Objects, Terrain, Buildings, Roads, Pylons, NavData, Airports, Orthophotos."));
         mb.exec();
 
         if (mb.result() == QMessageBox::No) {
diff --git a/src/Main/globals.cxx b/src/Main/globals.cxx
index 2f7f2c49f..b5479c32b 100644
--- a/src/Main/globals.cxx
+++ b/src/Main/globals.cxx
@@ -41,6 +41,7 @@
 #include <simgear/props/props_io.hxx>
 #include <simgear/scene/model/modellib.hxx>
 #include <simgear/package/Root.hxx>
+#include <simgear/scene/util/OrthophotoManager.hxx>
 
 #include <Add-ons/AddonResourceProvider.hxx>
 #include <Aircraft/controls.hxx>
@@ -418,6 +419,9 @@ void FGGlobals::append_fg_scenery (const SGPath &path)
 
     // temporary fix so these values survive reset
     n->setAttribute(SGPropertyNode::PRESERVE, true);
+
+    // let the orthophoto manager know
+    simgear::OrthophotoManager::instance()->addSceneryPath(abspath);
 }
 
 void FGGlobals::append_read_allowed_paths(const SGPath &path)
@@ -432,6 +436,7 @@ void FGGlobals::append_read_allowed_paths(const SGPath &path)
 
 void FGGlobals::clear_fg_scenery()
 {
+    simgear::OrthophotoManager::instance()->clearSceneryPaths();
   fg_scenery.clear();
   fgGetNode("/sim", true)->removeChildren("fg-scenery");
 }
